name: Deploy by Container

on:
  push:
    # branches: [prod/api]
    branches: deploy-test
    # paths:
    # - "apps/auth-api"

env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  GOOGLE_REDIRECT_URL: ${{ secrets.GOOGLE_REDIRECT_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: shipcheck-be

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build, tag, and push image to Amazon ECR
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI="${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-2.amazonaws.com/${ECR_REPOSITORY}"

          docker build -t ${ECR_URI}:${IMAGE_TAG} -f apps/auth-api/Dockerfile .
          docker push ${ECR_URI}:${IMAGE_TAG}

      - name: Create .env and prepare deploy package
        run: |
          mkdir -p deploy

          echo "ECR_REGISTRY=$ECR_REGISTRY" >> deploy/.env
          echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> deploy/.env
          echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> deploy/.env
          echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> deploy/.env
          echo "GOOGLE_REDIRECT_URL=$GOOGLE_REDIRECT_URL" >> deploy/.env
          echo "JWT_SECRET=$SECRET" >> deploy/.env
          echo "IMAGE_TAG=$IMAGE_TAG" >> deploy/.env

          cp apps/auth-api/appspec.yml deploy/
          cp -r apps/auth-api/scripts deploy/

          cd deploy && zip -r ../deploy.zip .

      - name: Upload deploy package to S3
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.S3_BUCKET }}/deploy.zip

      - name: Create CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name undefineddev-prod \
            --deployment-group-name undefineddev-prod \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=undefineddev-for-deploy,key=deploy.zip,bundleType=zip
